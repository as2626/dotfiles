# use Ctrl-a instead of Ctrl-b -- easier to use
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# more history
set -g history-limit 5000

# -- navigation ----------------------------------------------------------------
# use mouse
set -g mouse on

# create session
bind C-c new-session

# pane navigation
bind h select-pane -L  # move left
bind j select-pane -D  # move down
bind k select-pane -U  # move up
bind l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# ensure that escape is not ignored (so Vim works properly)
set-option -sg escape-time 0

# window navigation
unbind n
unbind p
bind C-h previous-window # select previous window
bind C-l next-window     # select next window
bind-key Tab last-window

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# basic settings
setw -g xterm-keys on # for vim
setw -g mode-keys vi # vi key

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title
# set -g set-titles-string '#h Ξ #S ● #I #W'

# activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Better resizing
setw -g aggressive-resize on


# -- status -------------------------------------------------------------------

# 12-hr clock
set-window-option -g clock-mode-style 12

# Refresh status line every 10 seconds
set -g status-interval 10

# Set the background color
set -g status-bg colour8

#Set the left and right status
set -g status-left '#[bg=black]#[fg=cyan]#{?client_prefix,#[bg=colour240]#[fg=black],} Ξ #S #[bg=colour8]#[fg=black]#{?client_prefix,#[fg=colour240],}#{?window_zoomed_flag, 🔍 ,} '
set -g status-right '#[fg=cyan]#[bg=cyan]#[fg=black] #(echo $USER) #[fg=black]#[bg=black]#[fg=cyan] #h '

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=colour8]#[bg=cyan]#[fg=colour234]#[bg=cyan] #I* #[fg=colour234] #W #[fg=cyan]#[bg=colour8]"

set -g window-status-format "#[fg=colour8]#[bg=colour240]#[fg=black]#[bg=colour240] #I-#[fg=black]  #W #[fg=colour240]#[bg=colour8]"

# Pane border
set -g pane-border-style fg=cyan,bg=default
set -g pane-active-border-style fg=cyan,bg=default

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
# messages
set -g message-style 'fg=cyan bg=black bold'

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy 0 start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi 0 send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy $ end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi $ send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

